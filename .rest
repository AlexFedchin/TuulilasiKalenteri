# Test the root API endpoint
GET http://localhost:3000/api
Content-Type: application/json

###

# Test user login
# Required: username and password
POST http://localhost:3000/api/auth/login
Content-Type: application/json

{
  "username": "admin",
  "password": "admin123"
}

###

# Test user registration
# Required: username, password (min 8 characters), and role (either "regular" or "admin")
POST http://localhost:3000/api/auth/register
Content-Type: application/json

{
  "username": "newuser",
  "password": "password123",
  "role": "regular"
}

###
POST http://localhost:3000/api/auth/register
Content-Type: application/json

{
  "username": "admin",
  "password": "admin123",
  "role": "admin"
}

###

# Get all bookings (Admin only)
# Requires: Bearer token with admin role
GET http://localhost:3000/api/bookings
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3ZjUwZmM1ZjdlMWI3ZmU1MDk3MzIyNiIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTc0NDExMzYzMSwiZXhwIjoxNzQ0MTM1MjMxfQ.nei16HfS7fAnaU59YJ3l8npTjKACrfe1WnwrLI9XDMA
Content-Type: application/json

###

# Get a specific booking by ID
# Requires: Bearer token (admin or regular user)
# If regular user, they must own the booking
GET http://localhost:3000/api/bookings/67f5107610e813722de7d1c1
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3ZjUwZmM1ZjdlMWI3ZmU1MDk3MzIyNiIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTc0NDExMzYzMSwiZXhwIjoxNzQ0MTM1MjMxfQ.nei16HfS7fAnaU59YJ3l8npTjKACrfe1WnwrLI9XDMA
Content-Type: application/json

###

# Get own bookings
# Requires: Bearer token (admin or regular user)
GET http://localhost:3000/api/bookings/ownBookings
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3ZjUwZmM1ZjdlMWI3ZmU1MDk3MzIyNiIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTc0NDExMzYzMSwiZXhwIjoxNzQ0MTM1MjMxfQ.nei16HfS7fAnaU59YJ3l8npTjKACrfe1WnwrLI9XDMA
Content-Type: application/json

###

# Create a new booking
# Requires: Bearer token (admin or regular user)
# Required body fields: title (string), date (ISO date), location (string)
POST http://localhost:3000/api/bookings
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3ZjUwZmM1ZjdlMWI3ZmU1MDk3MzIyNiIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTc0NDExMzYzMSwiZXhwIjoxNzQ0MTM1MjMxfQ.nei16HfS7fAnaU59YJ3l8npTjKACrfe1WnwrLI9XDMA
Content-Type: application/json

{
  "title": "Team Meeting",
  "date": "2025-04-10",
  "location": "Conference Room"
}

###

# Update a booking
# Requires: Bearer token (admin or regular user)
# If regular user, they must own the booking
# Required body fields: title (string), date (ISO date), location (string)
PUT http://localhost:3000/api/bookings/67f5107610e813722de7d1c1
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3ZjUwZmM1ZjdlMWI3ZmU1MDk3MzIyNiIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTc0NDExMzYzMSwiZXhwIjoxNzQ0MTM1MjMxfQ.nei16HfS7fAnaU59YJ3l8npTjKACrfe1WnwrLI9XDMA
Content-Type: application/json

{
  "title": "Updated Meeting",
  "date": "2025-04-11",
  "location": "Updated Room"
}

###

# Delete a booking
# Requires: Bearer token (admin or regular user)
# If regular user, they must own the booking
DELETE http://localhost:3000/api/bookings/67f5107610e813722de7d1c1
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3ZjUwZmM1ZjdlMWI3ZmU1MDk3MzIyNiIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTc0NDExMzYzMSwiZXhwIjoxNzQ0MTM1MjMxfQ.nei16HfS7fAnaU59YJ3l8npTjKACrfe1WnwrLI9XDMA
Content-Type: application/json